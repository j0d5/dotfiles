" {{{
" Maintainer: Johannes Steudle
" .vimrc
"     for Unix and macOS: ~/.vimrc
" }}}

" Use Vim defaults (much better!)
" set nocompatible

syntax on

" Shell {{{
if $SHELL =~? 'bin/fish'
    set shell=/bin/sh
endif
" }}}

set hidden           " Allow switching edited buffers without saving
set title            " Show filename

" Layout {{{
" set termencoding=utf-8
set encoding=utf-8     " Use UTF-8 as the default buffer encoding
" scriptencoding utf-8
" }}}

" Behavior {{{
set autoread         " Read open files again when changed outside Vim
set switchbuf=useopen           " reveal already opened files from the
                                " quickfix window instead of opening new
                                " buffers
set nostartofline    " Keep cursor in current column when using page commands
set autochdir        " Automatically set current directory to directory of last opened file
set visualbell       " Set visual bell instead of acustic
set mouse=a          " Enable the use of the mouse
set number relativenumber " hybrid relative numbers
set matchtime=4      " Jump to matching bracket for n/10 seconds
set nospell
set nojoinspaces     " Insert only one space when joining lines
set magic            " Use magic escaping
set completeopt=menu,menuone,longest,preview " Insert mode completion options
set backspace=indent,eol,start
" }}}

" Show some invisible characters {{{
" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·
" }}}

" Indentation {{{
set autoindent       " copy indent from current line
set smartindent      " Set indention
set shiftround       " shift to nearest indent
" }}}

" Tab settings {{{
set tabstop=4        " Tab size
set shiftwidth=4     " Shift width
set softtabstop=4
set expandtab        " Tabs to spaces
set smarttab
" }}}

" Handle long lines {{{
set wrap
set textwidth=79
set formatoptions=qrn1
set colorcolumn=80
set linebreak
set display+=lastline
" }}}

" Search {{{ See http://stevelosh.com/blog/2010/09/coming-home-to-vim/
set hlsearch             " Highlight search
set incsearch            " incremental searching
set ignorecase smartcase " Case-insensitive searching
set showmatch            " When a bracket is inserted, briefly jump to a matching one
nnoremap <tab> %
vnoremap <tab> %
" }}}

" Scrolling {{{
set scrolloff=8
set sidescrolloff=15
set sidescroll=1
" }}}

" Wildmenu {{{
set wildmenu                   " Use menu to show command-line completion (in 'full' case)
set wildmode=list:longest,full " set command-line completion mode:
" - on first <Tab>, when more than one match, list all matches and complete the longest common string
" - on second <Tab>, complete the next full match and show menu

" Ignore these filenames during enhanced command line completion.
set wildignore+=*/.idea/*,*/.project/*    " ignore IDE project files
set wildignore+=*/.git/*,*/.hg/*,*/.svn/* " ignore version control files
set wildignore+=*.aux,*.out,*.toc " LaTeX intermediate files
set wildignore+=*.jpg,*.bmp,*.gif " binary images
set wildignore+=*.luac            " Lua byte code
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest,*.so,*.zip  " compiled object files
set wildignore+=*.pyc             " Python byte code
set wildignore+=*.spl             " compiled spelling word lists
set wildignore+=*.sw?             " Vim swap files
set wildignore+=.DS_Store         " Mac files
set wildignore+=*/tmp/*           " MacOSX/Linux
set wildignore+=*\\tmp\\*         " Windows
" }}}

" Python {{{
let g:python_host_prog  = '/usr/bin/python'
let g:python3_host_prog = '/usr/local/bin/python3'

" Temporary workaround for python 3.7: https://github.com/vim/vim/issues/3117#issuecomment-402622616
if has('python3')
  silent! python3 1
endif
" }}}

" PlugIn-Configuration {{{
call plug#begin('$HOME/.vim/plugged')
so ~/.vim/settings/plugins.vim
call plug#end()
" }}}

" Colorscheme {{{
if has('gui_running')
    colorscheme tweetjay
elseif &t_Co < 256
    colorscheme default
    set nocursorline " Looks bad in this mode
else
    colorscheme tweetjay
    " Customized colors
    highlight SignColumn ctermbg=234
    highlight StatusLine cterm=bold ctermfg=245 ctermbg=235
    highlight StatusLineNC cterm=bold ctermfg=245 ctermbg=235
    highlight SpellBad cterm=underline
endif

" Highlight current line, but only in active window
augroup CursorLineOnlyInActiveWindow
    autocmd!
    autocmd VimEnter,WinEnter,BufWinEnter * setlocal cursorline
    autocmd WinLeave * setlocal nocursorline
augroup END
" }}}

" StatusLine {{{ configure airline status bar
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme='tweetjay_dark'
" }}}

" Source settings {{{
so ~/.vim/settings/ale.vim
so ~/.vim/settings/ale.vim
so ~/.vim/settings/ctrlp.vim
so ~/.vim/settings/keymap.vim
" }}}

" Special filetypes and encoding {{{
if has('autocmd')
    "autocmd BufEnter * cd %:p:h
    filetype plugin indent on
endif
" }}}

" Encoding {{{
" Always check for UTF-8 when trying to determine encodings
if &fileencodings !~? 'utf-8'
    set fileencodings+=utf-8
endif
" Make sure we have a sane fallback for encoding detection
set fileencodings+=default
" }}}

" Load local vim config {{{
let $LOCALFILE=expand('~/.vimrc_local')
if filereadable($LOCALFILE)
    source $LOCALFILE
endif
" }}}
